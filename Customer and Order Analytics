#In this SQL, I'm querying a database with multiple tables in it to quantify statistics about customer and order data. 
  -- How many orders were placed in January?

SELECT count(orderID)
FROM BIT_DB.JanSales
WHERE length(orderID) = 6
AND orderID <> 'Order ID';

--How many of those orders were for an iPhone?
    
SELECT count(product)
FROM BIT_DB.M JanSales
WHERE length(orderID) = 6
AND orderID <> 'Order ID' 
AND Product = 'iPhone';

-- Select the customer account numbers for all the orders that were placed in February.

SELECT distinct acctnum
FROM BIT_DB.customers AS c
INNER JOIN BIT_DB.FebSales AS Feb
ON c.order_id= Feb.orderID
WHERE length(orderID) = 6
AND orderID <> 'Order ID' 

--Which product was the cheapest one sold in January, and what was the price?
SELECT  distinct MIN(price), product
FROM BIT_DB.JanSales
GROUP BY product
ORDER BY price ASC 
LIMIT 1;

--What is the total revenue for each product sold in January?

SELECT sum(quantity)*price AS revenue, product
FROM BIT_DB.JanSales
GROUP BY product;

--Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?
SELECT product, sum(Quantity), SUM(quantity) *price as revenue
FROM BIT_DB.FebSales
WHERE location ='548 Lincoln St, Seattle, WA 98101'
GROUP BY product;

--How many customers ordered more than 2 products at a time in February, and what was the average amount spent for those customers?
SELECT count(distinct cust.acctnum), 
avg(quantity*price)
FROM BIT_DB.FebSales Feb
LEFT JOIN BIT_DB.customers cust
ON FEB.orderid=cust.order_id
WHERE Feb.Quantity>2
AND length(orderid) = 6
AND orderid <> 'Order ID';

--List all the products sold in Los Angeles in February, and include how many of each were sold.
SELECT distinct product, SUM(quantity)
FROM BIT_DB.FebSales
WHERE location LIKE '%Los Angeles%'
GROUP By Product;

-- Which locations in New York received at least 3 orders in January, and how many orders did they each receive? 
SELECT location, count(orderID) as orders_received
FROM BIT_DB.JanSales
WHERE location LIKE '%New York%'
AND length(orderid) = 6
AND orderid <> 'Order ID'
GROUP BY location
HAVING orders_received > 2;

-- How many of each type of headphone were sold in February?
SELECT sum(quantity) as headphones_sold, product
FROM BIT_DB.FebSales
WHERE product LIKE '%Headphones%'
AND length(orderid) = 6
AND orderid <> 'Order ID'
GROUP BY product;


--What was the average amount spent per account in February?

SELECT SUM(Feb.price*Feb.quantity)/ count(C.acctnum) AS avg_amount_spent
FROM BIT_DB.FebSales as Feb

LEFT JOIN BIT_DB.customers as C
ON Feb.orderID= C.order_id
WHERE length(Feb.orderid) = 6
AND FEB.orderid <> 'Order ID';


--What was the average quantity of products purchased per account in February? 

SELECT SUM(Feb.quantity)/ count(C.acctnum) as avg_quantity
FROM BIT_DB.FebSales as Feb
LEFT JOIN BIT_DB.customers as C
ON Feb.orderID= C.order_id
WHERE length(Feb.orderid) = 6
AND FEB.orderid <> 'Order ID';

-- Which product brought in the most revenue in January and how much revenue did it bring in total?
SELECT product, MAX(revenue) AS total_revenue
FROM (
SELECT SUM(quantity*price) as revenue, product
FROM BIT_DB.JanSales
WHERE length(orderid) = 6
AND orderid <> 'Order ID'
GROUP BY product
) AS product_revenues;

--Calculate the average popularity for the artists in the Spotify data table. 
--For every artist with an average popularity of 90 or above, I labelled them as a “Top Star”.

WITH popularity_average_CTE AS (
  Select artist_name, AVG(popularity) as avg_pop
  FROM spotifydata
  GROUP BY artist_name
)
SELECT artist_name, avg_pop,'Top Star' AS tag FROM popularity_average_CTE
WHERE avg_pop >= 90;
